/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package AvroSchema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class mobile_log extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1407429316585317267L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"mobile_log\",\"namespace\":\"AvroSchema\",\"fields\":[{\"name\":\"log_id\",\"type\":\"string\"},{\"name\":\"cust_id\",\"type\":\"string\"},{\"name\":\"log_dtm\",\"type\":\"string\"},{\"name\":\"m_id\",\"type\":\"string\"},{\"name\":\"ip_addr\",\"type\":\"string\"},{\"name\":\"os_type\",\"type\":\"string\"},{\"name\":\"os_version\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<mobile_log> ENCODER =
      new BinaryMessageEncoder<mobile_log>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<mobile_log> DECODER =
      new BinaryMessageDecoder<mobile_log>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<mobile_log> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<mobile_log> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<mobile_log>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this mobile_log to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a mobile_log from a ByteBuffer. */
  public static mobile_log fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence log_id;
  @Deprecated public java.lang.CharSequence cust_id;
  @Deprecated public java.lang.CharSequence log_dtm;
  @Deprecated public java.lang.CharSequence m_id;
  @Deprecated public java.lang.CharSequence ip_addr;
  @Deprecated public java.lang.CharSequence os_type;
  @Deprecated public java.lang.CharSequence os_version;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public mobile_log() {}

  /**
   * All-args constructor.
   * @param log_id The new value for log_id
   * @param cust_id The new value for cust_id
   * @param log_dtm The new value for log_dtm
   * @param m_id The new value for m_id
   * @param ip_addr The new value for ip_addr
   * @param os_type The new value for os_type
   * @param os_version The new value for os_version
   */
  public mobile_log(java.lang.CharSequence log_id, java.lang.CharSequence cust_id, java.lang.CharSequence log_dtm, java.lang.CharSequence m_id, java.lang.CharSequence ip_addr, java.lang.CharSequence os_type, java.lang.CharSequence os_version) {
    this.log_id = log_id;
    this.cust_id = cust_id;
    this.log_dtm = log_dtm;
    this.m_id = m_id;
    this.ip_addr = ip_addr;
    this.os_type = os_type;
    this.os_version = os_version;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return log_id;
    case 1: return cust_id;
    case 2: return log_dtm;
    case 3: return m_id;
    case 4: return ip_addr;
    case 5: return os_type;
    case 6: return os_version;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: log_id = (java.lang.CharSequence)value$; break;
    case 1: cust_id = (java.lang.CharSequence)value$; break;
    case 2: log_dtm = (java.lang.CharSequence)value$; break;
    case 3: m_id = (java.lang.CharSequence)value$; break;
    case 4: ip_addr = (java.lang.CharSequence)value$; break;
    case 5: os_type = (java.lang.CharSequence)value$; break;
    case 6: os_version = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'log_id' field.
   * @return The value of the 'log_id' field.
   */
  public java.lang.CharSequence getLogId() {
    return log_id;
  }

  /**
   * Sets the value of the 'log_id' field.
   * @param value the value to set.
   */
  public void setLogId(java.lang.CharSequence value) {
    this.log_id = value;
  }

  /**
   * Gets the value of the 'cust_id' field.
   * @return The value of the 'cust_id' field.
   */
  public java.lang.CharSequence getCustId() {
    return cust_id;
  }

  /**
   * Sets the value of the 'cust_id' field.
   * @param value the value to set.
   */
  public void setCustId(java.lang.CharSequence value) {
    this.cust_id = value;
  }

  /**
   * Gets the value of the 'log_dtm' field.
   * @return The value of the 'log_dtm' field.
   */
  public java.lang.CharSequence getLogDtm() {
    return log_dtm;
  }

  /**
   * Sets the value of the 'log_dtm' field.
   * @param value the value to set.
   */
  public void setLogDtm(java.lang.CharSequence value) {
    this.log_dtm = value;
  }

  /**
   * Gets the value of the 'm_id' field.
   * @return The value of the 'm_id' field.
   */
  public java.lang.CharSequence getMId() {
    return m_id;
  }

  /**
   * Sets the value of the 'm_id' field.
   * @param value the value to set.
   */
  public void setMId(java.lang.CharSequence value) {
    this.m_id = value;
  }

  /**
   * Gets the value of the 'ip_addr' field.
   * @return The value of the 'ip_addr' field.
   */
  public java.lang.CharSequence getIpAddr() {
    return ip_addr;
  }

  /**
   * Sets the value of the 'ip_addr' field.
   * @param value the value to set.
   */
  public void setIpAddr(java.lang.CharSequence value) {
    this.ip_addr = value;
  }

  /**
   * Gets the value of the 'os_type' field.
   * @return The value of the 'os_type' field.
   */
  public java.lang.CharSequence getOsType() {
    return os_type;
  }

  /**
   * Sets the value of the 'os_type' field.
   * @param value the value to set.
   */
  public void setOsType(java.lang.CharSequence value) {
    this.os_type = value;
  }

  /**
   * Gets the value of the 'os_version' field.
   * @return The value of the 'os_version' field.
   */
  public java.lang.CharSequence getOsVersion() {
    return os_version;
  }

  /**
   * Sets the value of the 'os_version' field.
   * @param value the value to set.
   */
  public void setOsVersion(java.lang.CharSequence value) {
    this.os_version = value;
  }

  /**
   * Creates a new mobile_log RecordBuilder.
   * @return A new mobile_log RecordBuilder
   */
  public static AvroSchema.mobile_log.Builder newBuilder() {
    return new AvroSchema.mobile_log.Builder();
  }

  /**
   * Creates a new mobile_log RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new mobile_log RecordBuilder
   */
  public static AvroSchema.mobile_log.Builder newBuilder(AvroSchema.mobile_log.Builder other) {
    return new AvroSchema.mobile_log.Builder(other);
  }

  /**
   * Creates a new mobile_log RecordBuilder by copying an existing mobile_log instance.
   * @param other The existing instance to copy.
   * @return A new mobile_log RecordBuilder
   */
  public static AvroSchema.mobile_log.Builder newBuilder(AvroSchema.mobile_log other) {
    return new AvroSchema.mobile_log.Builder(other);
  }

  /**
   * RecordBuilder for mobile_log instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<mobile_log>
    implements org.apache.avro.data.RecordBuilder<mobile_log> {

    private java.lang.CharSequence log_id;
    private java.lang.CharSequence cust_id;
    private java.lang.CharSequence log_dtm;
    private java.lang.CharSequence m_id;
    private java.lang.CharSequence ip_addr;
    private java.lang.CharSequence os_type;
    private java.lang.CharSequence os_version;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(AvroSchema.mobile_log.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.log_id)) {
        this.log_id = data().deepCopy(fields()[0].schema(), other.log_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.cust_id)) {
        this.cust_id = data().deepCopy(fields()[1].schema(), other.cust_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.log_dtm)) {
        this.log_dtm = data().deepCopy(fields()[2].schema(), other.log_dtm);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.m_id)) {
        this.m_id = data().deepCopy(fields()[3].schema(), other.m_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ip_addr)) {
        this.ip_addr = data().deepCopy(fields()[4].schema(), other.ip_addr);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.os_type)) {
        this.os_type = data().deepCopy(fields()[5].schema(), other.os_type);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.os_version)) {
        this.os_version = data().deepCopy(fields()[6].schema(), other.os_version);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing mobile_log instance
     * @param other The existing instance to copy.
     */
    private Builder(AvroSchema.mobile_log other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.log_id)) {
        this.log_id = data().deepCopy(fields()[0].schema(), other.log_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.cust_id)) {
        this.cust_id = data().deepCopy(fields()[1].schema(), other.cust_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.log_dtm)) {
        this.log_dtm = data().deepCopy(fields()[2].schema(), other.log_dtm);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.m_id)) {
        this.m_id = data().deepCopy(fields()[3].schema(), other.m_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ip_addr)) {
        this.ip_addr = data().deepCopy(fields()[4].schema(), other.ip_addr);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.os_type)) {
        this.os_type = data().deepCopy(fields()[5].schema(), other.os_type);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.os_version)) {
        this.os_version = data().deepCopy(fields()[6].schema(), other.os_version);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'log_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getLogId() {
      return log_id;
    }

    /**
      * Sets the value of the 'log_id' field.
      * @param value The value of 'log_id'.
      * @return This builder.
      */
    public AvroSchema.mobile_log.Builder setLogId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.log_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'log_id' field has been set.
      * @return True if the 'log_id' field has been set, false otherwise.
      */
    public boolean hasLogId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'log_id' field.
      * @return This builder.
      */
    public AvroSchema.mobile_log.Builder clearLogId() {
      log_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'cust_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustId() {
      return cust_id;
    }

    /**
      * Sets the value of the 'cust_id' field.
      * @param value The value of 'cust_id'.
      * @return This builder.
      */
    public AvroSchema.mobile_log.Builder setCustId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.cust_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'cust_id' field has been set.
      * @return True if the 'cust_id' field has been set, false otherwise.
      */
    public boolean hasCustId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'cust_id' field.
      * @return This builder.
      */
    public AvroSchema.mobile_log.Builder clearCustId() {
      cust_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'log_dtm' field.
      * @return The value.
      */
    public java.lang.CharSequence getLogDtm() {
      return log_dtm;
    }

    /**
      * Sets the value of the 'log_dtm' field.
      * @param value The value of 'log_dtm'.
      * @return This builder.
      */
    public AvroSchema.mobile_log.Builder setLogDtm(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.log_dtm = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'log_dtm' field has been set.
      * @return True if the 'log_dtm' field has been set, false otherwise.
      */
    public boolean hasLogDtm() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'log_dtm' field.
      * @return This builder.
      */
    public AvroSchema.mobile_log.Builder clearLogDtm() {
      log_dtm = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'm_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getMId() {
      return m_id;
    }

    /**
      * Sets the value of the 'm_id' field.
      * @param value The value of 'm_id'.
      * @return This builder.
      */
    public AvroSchema.mobile_log.Builder setMId(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.m_id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'm_id' field has been set.
      * @return True if the 'm_id' field has been set, false otherwise.
      */
    public boolean hasMId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'm_id' field.
      * @return This builder.
      */
    public AvroSchema.mobile_log.Builder clearMId() {
      m_id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'ip_addr' field.
      * @return The value.
      */
    public java.lang.CharSequence getIpAddr() {
      return ip_addr;
    }

    /**
      * Sets the value of the 'ip_addr' field.
      * @param value The value of 'ip_addr'.
      * @return This builder.
      */
    public AvroSchema.mobile_log.Builder setIpAddr(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.ip_addr = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'ip_addr' field has been set.
      * @return True if the 'ip_addr' field has been set, false otherwise.
      */
    public boolean hasIpAddr() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'ip_addr' field.
      * @return This builder.
      */
    public AvroSchema.mobile_log.Builder clearIpAddr() {
      ip_addr = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'os_type' field.
      * @return The value.
      */
    public java.lang.CharSequence getOsType() {
      return os_type;
    }

    /**
      * Sets the value of the 'os_type' field.
      * @param value The value of 'os_type'.
      * @return This builder.
      */
    public AvroSchema.mobile_log.Builder setOsType(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.os_type = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'os_type' field has been set.
      * @return True if the 'os_type' field has been set, false otherwise.
      */
    public boolean hasOsType() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'os_type' field.
      * @return This builder.
      */
    public AvroSchema.mobile_log.Builder clearOsType() {
      os_type = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'os_version' field.
      * @return The value.
      */
    public java.lang.CharSequence getOsVersion() {
      return os_version;
    }

    /**
      * Sets the value of the 'os_version' field.
      * @param value The value of 'os_version'.
      * @return This builder.
      */
    public AvroSchema.mobile_log.Builder setOsVersion(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.os_version = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'os_version' field has been set.
      * @return True if the 'os_version' field has been set, false otherwise.
      */
    public boolean hasOsVersion() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'os_version' field.
      * @return This builder.
      */
    public AvroSchema.mobile_log.Builder clearOsVersion() {
      os_version = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public mobile_log build() {
      try {
        mobile_log record = new mobile_log();
        record.log_id = fieldSetFlags()[0] ? this.log_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.cust_id = fieldSetFlags()[1] ? this.cust_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.log_dtm = fieldSetFlags()[2] ? this.log_dtm : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.m_id = fieldSetFlags()[3] ? this.m_id : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.ip_addr = fieldSetFlags()[4] ? this.ip_addr : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.os_type = fieldSetFlags()[5] ? this.os_type : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.os_version = fieldSetFlags()[6] ? this.os_version : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<mobile_log>
    WRITER$ = (org.apache.avro.io.DatumWriter<mobile_log>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<mobile_log>
    READER$ = (org.apache.avro.io.DatumReader<mobile_log>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
